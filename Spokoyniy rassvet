<!DOCTYPE html>
<html>
<head>
    <title>üí¨ –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            height: 100vh;
            display: flex;
            flex-direction: column;
        }
        
        /* –≠–∫—Ä–∞–Ω—ã */
        .screen {
            display: none;
            flex: 1;
            flex-direction: column;
        }
        
        .active {
            display: flex;
        }
        
        /* –®–∞–ø–∫–∞ */
        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 15px;
            text-align: center;
            color: white;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        /* –§–æ—Ä–º—ã */
        .form-container {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .form {
            background: rgba(255, 255, 255, 0.95);
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            width: 100%;
            max-width: 400px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
        }
        
        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-input:focus {
            outline: none;
            border-color: #007aff;
        }
        
        .btn {
            width: 100%;
            padding: 14px;
            background: #007aff;
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .btn:hover {
            background: #0056cc;
        }
        
        .btn-secondary {
            background: #6c757d;
        }
        
        .btn-secondary:hover {
            background: #545b62;
        }
        
        .switch-form {
            text-align: center;
            margin-top: 20px;
        }
        
        .switch-link {
            color: #007aff;
            cursor: pointer;
            text-decoration: underline;
        }
        
        /* –ß–∞—Ç */
        .chat-container {
            flex: 1;
            overflow-y: auto;
            padding: 15px;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
        
        .message {
            max-width: 80%;
            padding: 12px 16px;
            border-radius: 18px;
            margin-bottom: 8px;
            word-wrap: break-word;
            animation: fadeIn 0.3s ease-in;
        }
        
        .user-message {
            align-self: flex-end;
            background: #007aff;
            color: white;
            border-bottom-right-radius: 4px;
        }
        
        .admin-message {
            align-self: flex-start;
            background: rgba(255, 255, 255, 0.9);
            color: #333;
            border-bottom-left-radius: 4px;
        }
        
        .system-message {
            align-self: center;
            background: rgba(255, 255, 255, 0.3);
            color: white;
            font-style: italic;
            text-align: center;
            max-width: 60%;
        }
        
        .message-sender {
            font-size: 12px;
            opacity: 0.8;
            margin-bottom: 4px;
        }
        
        .message-content {
            margin-bottom: 4px;
        }
        
        .timestamp {
            font-size: 11px;
            opacity: 0.7;
            text-align: right;
        }
        
        /* –í–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è */
        .input-container {
            padding: 15px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-top: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .input-row {
            display: flex;
            gap: 10px;
            align-items: flex-end;
        }
        
        #messageInput {
            flex: 1;
            padding: 12px 16px;
            border: none;
            border-radius: 25px;
            background: rgba(255, 255, 255, 0.9);
            font-size: 16px;
            outline: none;
            resize: none;
            max-height: 120px;
        }
        
        .media-buttons {
            display: flex;
            gap: 5px;
            margin-bottom: 10px;
        }
        
        .media-btn {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            color: white;
            font-size: 18px;
        }
        
        .send-button {
            background: #007aff;
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .send-button:hover {
            background: #0056cc;
        }
        
        .send-button:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
        
        /* –í—ã–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */
        .admin-list {
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin-top: 20px;
        }
        
        .admin-item {
            background: rgba(255, 255, 255, 0.9);
            padding: 15px;
            border-radius: 10px;
            cursor: pointer;
            transition: transform 0.2s;
        }
        
        .admin-item:hover {
            transform: translateY(-2px);
        }
        
        .admin-name {
            font-weight: 600;
            color: #333;
        }
        
        .admin-status {
            font-size: 12px;
            color: #28a745;
        }
        
        .admin-status.offline {
            color: #dc3545;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <!-- –≠–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ -->
    <div id="registerScreen" class="screen active">
        <div class="header">
            <h2>üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
        </div>
        
        <div class="form-container">
            <div class="form">
                <div class="form-group">
                    <label class="form-label">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
                    <input type="text" id="regUsername" class="form-input" placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è">
                </div>
                
                <div class="form-group">
                    <label class="form-label">–ü–∞—Ä–æ–ª—å</label>
                    <input type="password" id="regPassword" class="form-input" placeholder="–ù–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤">
                </div>
                
                <button class="btn" onclick="register()">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
                
                <div class="switch-form">
                    –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <span class="switch-link" onclick="showScreen('loginScreen')">–í–æ–π—Ç–∏</span>
                </div>
                
                <div class="switch-form">
                    –í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä? <span class="switch-link" onclick="showScreen('adminLoginScreen')">–í–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω</span>
                </div>
            </div>
        </div>
    </div>
    
    <!-- –≠–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞ -->
    <div id="loginScreen" class="screen">
        <div class="header">
            <h2>üîê –í—Ö–æ–¥</h2>
        </div>
        
        <div class="form-container">
            <div class="form">
                <div class="form-group">
                    <label class="form-label">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
                    <input type="text" id="loginUsername" class="form-input" placeholder="–í–∞—à–µ –∏–º—è">
                </div>
                
                <div class="form-group">
                    <label class="form-label">–ü–∞—Ä–æ–ª—å</label>
                    <input type="password" id="loginPassword" class="form-input" placeholder="–í–∞—à –ø–∞—Ä–æ–ª—å">
                </div>
                
                <button class="btn" onclick="login()">–í–æ–π—Ç–∏</button>
                
                <div class="switch-form">
                    –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <span class="switch-link" onclick="showScreen('registerScreen')">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</span>
                </div>
                
                <div class="switch-form">
                    –í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä? <span class="switch-link" onclick="showScreen('adminLoginScreen')">–í–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω</span>
                </div>
            </div>
        </div>
    </div>
    
    <!-- –≠–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∞ -->
    <div id="adminLoginScreen" class="screen">
        <div class="header">
            <h2>üë®‚Äçüíº –í—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
        </div>
        
        <div class="form-container">
            <div class="form">
                <div class="form-group">
                    <label class="form-label">–ò–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</label>
                    <input type="text" id="adminUsername" class="form-input" placeholder="–í–∞—à –Ω–∏–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞">
                </div>
                
                <div class="form-group">
                    <label class="form-label">–ü–∞—Ä–æ–ª—å</label>
                    <input type="password" id="adminPassword" class="form-input" placeholder="–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞">
                </div>
                
                <button class="btn" onclick="adminLogin()">–í–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω</button>
                
                <div class="switch-form">
                    –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å? <span class="switch-link" onclick="showScreen('loginScreen')">–í–æ–π—Ç–∏ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</span>
                </div>
            </div>
        </div>
    </div>
    
    <!-- –≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -->
    <div id="adminSelectScreen" class="screen">
        <div class="header">
            <h2>üë• –í—ã–±–µ—Ä–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
        </div>
        
        <div class="chat-container">
            <div class="welcome-message">
                <h3>–ö–æ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å? üëã</h3>
                <p>–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è</p>
            </div>
            
            <div class="admin-list" id="adminList">
                <!-- –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∑–¥–µ—Å—å -->
            </div>
        </div>
    </div>
    
    <!-- –≠–∫—Ä–∞–Ω —á–∞—Ç–∞ -->
    <div id="chatScreen" class="screen">
        <div class="header">
            <h2 id="chatTitle">üí¨ –ß–∞—Ç</h2>
            <div id="chatStatus">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...</div>
        </div>
        
        <div class="chat-container" id="chatContainer">
            <!-- –°–æ–æ–±—â–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∑–¥–µ—Å—å -->
        </div>
        
        <div class="input-container">
            <div class="media-buttons">
                <button class="media-btn" onclick="attachPhoto()">üì∑</button>
                <button class="media-btn" onclick="attachFile()">üìé</button>
                <button class="media-btn" onclick="showStickers()">üòä</button>
            </div>
            
            <div class="input-row">
                <textarea 
                    id="messageInput" 
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." 
                    rows="1"
                ></textarea>
                <button id="sendButton" class="send-button" onclick="sendMessage()">
                    üì§
                </button>
            </div>
        </div>
    </div>

    <script>
        const tg = window.Telegram.WebApp;
        tg.expand();
        tg.enableClosingConfirmation();
        
        // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        let currentUser = null;
        let currentAdmin = null;
        let isAdminMode = false;
        let selectedAdminId = null;
        let chatHistory = [];
        
        // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–∞)
        const ADMINS = [
            { id: 1, name: "üåπ –†–æ–∑–µ—Ç—Ç–∞", online: true },
            { id: 2, name: "üåÄ –®–∏–Ω–¥–∑–∏", online: true },
            { id: 3, name: "üêë –ö—É–¥—Ä—è—à", online: false },
            { id: 4, name: "üß† –ú—É–¥—Ä–µ—Ü", online: true }
        ];
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
        function showScreen(screenId) {
            document.querySelectorAll('.screen').forEach(screen => {
                screen.classList.remove('active');
            });
            document.getElementById(screenId).classList.add('active');
        }
        
        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        function register() {
            const username = document.getElementById('regUsername').value.trim();
            const password = document.getElementById('regPassword').value.trim();
            
            if (!username || !password) {
                alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
                return;
            }
            
            if (password.length < 6) {
                alert('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤');
                return;
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            currentUser = {
                id: Date.now(),
                username: username,
                password: password,
                isAdmin: false
            };
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç
            tg.sendData(JSON.stringify({
                action: 'register',
                username: username,
                password: password,
                userId: currentUser.id
            }));
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            loadAdminList();
            showScreen('adminSelectScreen');
        }
        
        // –í—Ö–æ–¥
        function login() {
            const username = document.getElementById('loginUsername').value.trim();
            const password = document.getElementById('loginPassword').value.trim();
            
            if (!username || !password) {
                alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
                return;
            }
            
            // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
            // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
            currentUser = {
                id: Date.now(),
                username: username,
                isAdmin: false
            };
            
            loadAdminList();
            showScreen('adminSelectScreen');
        }
        
        // –í—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        function adminLogin() {
            const username = document.getElementById('adminUsername').value.trim();
            const password = document.getElementById('adminPassword').value.trim();
            
            if (!username || !password) {
                alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
                return;
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            tg.sendData(JSON.stringify({
                action: 'admin_login',
                username: username,
                password: password
            }));
            
            // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∂–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞
            // –ü–æ–∫–∞ –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
            currentAdmin = {
                username: username,
                isAdmin: true
            };
            isAdminMode = true;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Ç –¥–ª—è –∞–¥–º–∏–Ω–∞
            document.getElementById('chatTitle').textContent = `üë®‚Äçüíº –ê–¥–º–∏–Ω: ${username}`;
            document.getElementById('chatStatus').textContent = '–û–Ω–ª–∞–π–Ω';
            showScreen('chatScreen');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
            loadAdminChats();
        }
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        function loadAdminList() {
            const adminList = document.getElementById('adminList');
            adminList.innerHTML = '';
            
            ADMINS.forEach(admin => {
                const adminItem = document.createElement('div');
                adminItem.className = 'admin-item';
                adminItem.onclick = () => selectAdmin(admin);
                
                adminItem.innerHTML = `
                    <div class="admin-name">${admin.name}</div>
                    <div class="admin-status ${admin.online ? '' : 'offline'}">
                        ${admin.online ? 'üü¢ –û–Ω–ª–∞–π–Ω' : 'üî¥ –û—Ñ–ª–∞–π–Ω'}
                    </div>
                `;
                
                adminList.appendChild(adminItem);
            });
        }
        
        // –í—ã–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        function selectAdmin(admin) {
            selectedAdminId = admin.id;
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –±–æ—Ç–∞ –æ –≤—ã–±–æ—Ä–µ
            tg.sendData(JSON.stringify({
                action: 'select_admin',
                adminId: admin.id,
                adminName: admin.name,
                userId: currentUser.id,
                username: currentUser.username
            }));
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Ç
            document.getElementById('chatTitle').textContent = `üí¨ –ß–∞—Ç —Å ${admin.name}`;
            document.getElementById('chatStatus').textContent = '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...';
            showScreen('chatScreen');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
            loadChatHistory();
        }
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
        function loadChatHistory() {
            // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å —Å–µ—Ä–≤–µ—Ä–∞
            // –ü–æ–∫–∞ –æ—á–∏—â–∞–µ–º —á–∞—Ç
            const chatContainer = document.getElementById('chatContainer');
            chatContainer.innerHTML = '';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            addSystemMessage('–ß–∞—Ç –Ω–∞—á–∞—Ç. –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!');
        }
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ —á–∞—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        function loadAdminChats() {
            // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
            // –ü–æ–∫–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —á–∞—Ç—ã
            addSystemMessage('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!');
        }
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        function addSystemMessage(text) {
            const chatContainer = document.getElementById('chatContainer');
            const messageDiv = document.createElement('div');
            messageDiv.className = 'message system-message';
            messageDiv.textContent = text;
            chatContainer.appendChild(messageDiv);
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const text = messageInput.value.trim();
            
            if (!text) return;
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
            addMessage(text, isAdminMode ? 'admin' : 'user', isAdminMode ? currentAdmin.username : currentUser.username);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –±–æ—Ç
            tg.sendData(JSON.stringify({
                action: 'send_message',
                text: text,
                isAdmin: isAdminMode,
                userId: currentUser ? currentUser.id : null,
                adminId: selectedAdminId,
                username: isAdminMode ? currentAdmin.username : currentUser.username
            }));
            
            // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            messageInput.value = '';
            messageInput.style.height = 'auto';
            updateSendButton();
        }
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
        function addMessage(text, sender, username) {
            const chatContainer = document.getElementById('chatContainer');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}-message`;
            
            const senderDiv = document.createElement('div');
            senderDiv.className = 'message-sender';
            senderDiv.textContent = username;
            
            const contentDiv = document.createElement('div');
            contentDiv.className = 'message-content';
            contentDiv.textContent = text;
            
            const timeDiv = document.createElement('div');
            timeDiv.className = 'timestamp';
            timeDiv.textContent = new Date().toLocaleTimeString('ru-RU', {
                hour: '2-digit',
                minute: '2-digit'
            });
            
            messageDiv.appendChild(senderDiv);
            messageDiv.appendChild(contentDiv);
            messageDiv.appendChild(timeDiv);
            chatContainer.appendChild(messageDiv);
            
            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
        function updateSendButton() {
            const messageInput = document.getElementById('messageInput');
            const sendButton = document.getElementById('sendButton');
            sendButton.disabled = !messageInput.value.trim();
        }
        
        // –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ
        function attachPhoto() {
            // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏
            alert('–§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞');
        }
        
        // –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        function attachFile() {
            alert('–§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞');
        }
        
        // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∏–∫–µ—Ä—ã
        function showStickers() {
            alert('–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞');
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –±–æ—Ç–∞
        tg.onEvent('webAppDataReceived', (event) => {
            try {
                const data = JSON.parse(event.data);
                handleBotResponse(data);
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –±–æ—Ç–∞
        function handleBotResponse(data) {
            switch (data.action) {
                case 'new_message':
                    addMessage(data.text, data.sender, data.username);
                    break;
                    
                case 'admin_online_status':
                    updateAdminStatus(data.admins);
                    break;
                    
                case 'login_success':
                    if (data.isAdmin) {
                        currentAdmin = { username: data.username, isAdmin: true };
                        isAdminMode = true;
                        document.getElementById('chatTitle').textContent = `üë®‚Äçüíº –ê–¥–º–∏–Ω: ${data.username}`;
                        showScreen('chatScreen');
                    }
                    break;
                    
                case 'login_failed':
                    alert('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ' + data.reason);
                    break;
            }
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        function updateAdminStatus(admins) {
            ADMINS.forEach(admin => {
                const updatedAdmin = admins.find(a => a.id === admin.id);
                if (updatedAdmin) {
                    admin.online = updatedAdmin.online;
                }
            });
            
            if (document.getElementById('adminSelectScreen').classList.contains('active')) {
                loadAdminList();
            }
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        document.getElementById('messageInput').addEventListener('input', updateSendButton);
        document.getElementById('messageInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });
        
        updateSendButton();
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ textarea
        document.getElementById('messageInput').addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });
        
    </script>
</body>
</html>
