<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–°–ø–æ–∫–æ–π–Ω—ã–π —Ä–∞—Å—Å–≤–µ—Ç</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            min-height: 100vh;
        }

        .app-container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
        }

        .app-header {
            text-align: center;
            padding: 20px 0;
            background: rgba(255,255,255,0.1);
            border-radius: 20px;
            margin-bottom: 20px;
        }

        .app-header h1 {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .user-info {
            font-size: 14px;
            opacity: 0.8;
        }

        .quick-actions {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
            flex-wrap: wrap;
            justify-content: center;
        }

        .action-btn {
            padding: 12px 20px;
            border: none;
            border-radius: 25px;
            background: rgba(255,255,255,0.2);
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
            flex: 1;
            min-width: 100px;
        }

        .action-btn:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-2px);
        }

        .features-grid {
            display: grid;
            gap: 15px;
            margin-bottom: 20px;
        }

        .feature-card {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
        }

        .feature-card:hover {
            background: rgba(255,255,255,0.2);
            transform: translateY(-3px);
        }

        .feature-card h3 {
            margin-bottom: 8px;
            font-size: 18px;
        }

        .feature-card p {
            font-size: 14px;
            opacity: 0.8;
        }

        .support-section {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 20px;
        }

        .support-section h3 {
            margin-bottom: 15px;
            text-align: center;
        }

        .chat-container {
            height: 200px;
            overflow-y: auto;
            border: 1px solid rgba(255,255,255,0.3);
            border-radius: 10px;
            padding: 10px;
            margin-bottom: 10px;
            background: rgba(255,255,255,0.05);
        }

        .message {
            margin-bottom: 10px;
            padding: 8px 12px;
            border-radius: 10px;
            max-width: 80%;
        }

        .user-message {
            background: rgba(76, 175, 80, 0.3);
            margin-left: auto;
            text-align: right;
        }

        .support-message {
            background: rgba(33, 150, 243, 0.3);
            margin-right: auto;
        }

        .message-input {
            display: flex;
            gap: 10px;
        }

        .message-input input {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 25px;
            background: rgba(255,255,255,0.2);
            color: white;
            font-size: 14px;
        }

        .message-input input::placeholder {
            color: rgba(255,255,255,0.7);
        }

        .message-input button {
            padding: 12px 20px;
            border: none;
            border-radius: 25px;
            background: #4CAF50;
            color: white;
            cursor: pointer;
            font-size: 14px;
            transition: background 0.3s;
        }

        .message-input button:hover {
            background: #45a049;
        }

        .app-footer {
            text-align: center;
            padding: 20px;
            opacity: 0.7;
            font-size: 12px;
        }

        /* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .modal-content {
            background: white;
            color: #333;
            padding: 25px;
            border-radius: 20px;
            max-width: 350px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
        }

        .modal h2 {
            margin-bottom: 15px;
            color: #333;
            text-align: center;
        }

        .close-modal {
            width: 100%;
            padding: 12px;
            margin-top: 15px;
            border: none;
            border-radius: 25px;
            background: #667eea;
            color: white;
            cursor: pointer;
            font-size: 14px;
        }

        /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π */
        .vibration-settings,
        .meditation-timer,
        .stats-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .intensity-slider {
            width: 100%;
        }

        .pattern-select {
            padding: 10px;
            border-radius: 10px;
            border: 1px solid #ddd;
        }

        .timer-display {
            font-size: 48px;
            text-align: center;
            font-weight: bold;
            color: #667eea;
        }

        .timer-controls {
            display: flex;
            gap: 10px;
            justify-content: center;
        }

        .timer-controls button {
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            background: #667eea;
            color: white;
            cursor: pointer;
        }

        .stat-item {
            background: #f5f5f5;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
        }

        .stat-item h4 {
            color: #667eea;
            margin-bottom: 5px;
        }
    </style>
</head>
<body>
    <div class="app-container">
        <header class="app-header">
            <h1>üéØ –°–ø–æ–∫–æ–π–Ω—ã–π —Ä–∞—Å—Å–≤–µ—Ç</h1>
            <div class="user-info" id="userInfo">üë§ –ó–∞–≥—Ä—É–∑–∫–∞...</div>
        </header>
        
        <main class="main-content">
            <div class="quick-actions">
                <button class="action-btn" data-action="support">
                    üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞
                </button>
                <button class="action-btn" data-action="settings">
                    ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                </button>
                <button class="action-btn" data-action="history">
                    üìä –ò—Å—Ç–æ—Ä–∏—è
                </button>
            </div>

            <div class="features-grid">
                <div class="feature-card" data-feature="vibration">
                    <h3>üì≥ –í–∏–±—Ä–∞—Ü–∏–∏</h3>
                    <p>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–±—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤</p>
                </div>
                <div class="feature-card" data-feature="meditation">
                    <h3>üßò –ú–µ–¥–∏—Ç–∞—Ü–∏—è</h3>
                    <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è</p>
                </div>
                <div class="feature-card" data-feature="stats">
                    <h3>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                    <p>–ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</p>
                </div>
            </div>

            <div class="support-section" id="supportSection" style="display: none;">
                <h3>üí¨ –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h3>
                <div class="chat-container" id="chatContainer">
                    <div class="message support-message">
                        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –ß–µ–º –º–æ–∂–µ–º –ø–æ–º–æ—á—å?
                    </div>
                </div>
                <div class="message-input">
                    <input type="text" id="messageInput" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...">
                    <button id="sendMessage">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                </div>
            </div>
        </main>

        <footer class="app-footer">
            <p>¬© Spokoymyszowski_Dot</p>
        </footer>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ -->
    <div class="modal" id="modal">
        <div class="modal-content" id="modalContent">
            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
        </div>
    </div>

    <script>
        class MiniApp {
            constructor() {
                this.init();
            }

            init() {
                this.setupEventListeners();
                this.loadUserData();
            }

            setupEventListeners() {
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
                document.querySelectorAll('.action-btn').forEach(btn => {
                    btn.addEventListener('click', (e) => {
                        const action = e.target.dataset.action;
                        this.handleQuickAction(action);
                    });
                });

                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ñ—É–Ω–∫—Ü–∏–π
                document.querySelectorAll('.feature-card').forEach(card => {
                    card.addEventListener('click', (e) => {
                        const feature = e.currentTarget.dataset.feature;
                        this.openFeature(feature);
                    });
                });

                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
                document.getElementById('sendMessage').addEventListener('click', () => {
                    this.sendMessage();
                });

                // Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
                document.getElementById('messageInput').addEventListener('keypress', (e) => {
                    if (e.key === 'Enter') {
                        this.sendMessage();
                    }
                });

                // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                document.getElementById('modal').addEventListener('click', (e) => {
                    if (e.target.classList.contains('modal')) {
                        this.closeModal();
                    }
                });
            }

            handleQuickAction(action) {
                const actions = {
                    support: () => this.toggleSupport(),
                    settings: () => this.openSettings(),
                    history: () => this.showHistory()
                };
                
                if (actions[action]) {
                    actions[action]();
                }
            }

            openFeature(feature) {
                const features = {
                    vibration: () => this.openVibrationSettings(),
                    meditation: () => this.openMeditation(),
                    stats: () => this.showStatistics()
                };
                
                if (features[feature]) {
                    features[feature]();
                }
            }

            // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            openVibrationSettings() {
                this.showModal('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–±—Ä–∞—Ü–∏–∏', `
                    <div class="vibration-settings">
                        <label>–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: <span id="intensityValue">50</span>%</label>
                        <input type="range" id="intensitySlider" min="1" max="100" value="50" class="intensity-slider">
                        <label>–ü–∞—Ç—Ç–µ—Ä–Ω:</label>
                        <select class="pattern-select" id="patternSelect">
                            <option value="short">–ö–æ—Ä–æ—Ç–∫–∏–π</option>
                            <option value="long">–î–ª–∏–Ω–Ω—ã–π</option>
                            <option value="pulse">–ü—É–ª—å—Å–∏—Ä—É—é—â–∏–π</option>
                        </select>
                        <button class="test-vibration" onclick="miniApp.testVibration()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∏–±—Ä–∞—Ü–∏—é</button>
                    </div>
                `);
                
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏
                document.getElementById('intensitySlider').addEventListener('input', (e) => {
                    document.getElementById('intensityValue').textContent = e.target.value;
                });
            }

            openMeditation() {
                this.showModal('–ú–µ–¥–∏—Ç–∞—Ü–∏—è', `
                    <div class="meditation-timer">
                        <div class="timer-display" id="timerDisplay">10:00</div>
                        <div class="timer-controls">
                            <button onclick="miniApp.startTimer()">–°—Ç–∞—Ä—Ç</button>
                            <button onclick="miniApp.pauseTimer()">–ü–∞—É–∑–∞</button>
                            <button onclick="miniApp.resetTimer()">–°–±—Ä–æ—Å</button>
                        </div>
                    </div>
                `);
            }

            showStatistics() {
                this.showModal('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', `
                    <div class="stats-container">
                        <div class="stat-item">
                            <h4>–°–µ—Å—Å–∏–∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏</h4>
                            <p>12 –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
                        </div>
                        <div class="stat-item">
                            <h4>–û–±—â–µ–µ –≤—Ä–µ–º—è</h4>
                            <p>2 —á–∞—Å–∞ 30 –º–∏–Ω—É—Ç</p>
                        </div>
                        <div class="stat-item">
                            <h4>–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è</h4>
                            <p>3 –¥–Ω—è –ø–æ–¥—Ä—è–¥</p>
                        </div>
                    </div>
                `);
            }

            openSettings() {
                this.showModal('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', `
                    <div class="vibration-settings">
                        <label>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</label>
                        <select>
                            <option>–í–∫–ª—é—á–µ–Ω—ã</option>
                            <option>–í—ã–∫–ª—é—á–µ–Ω—ã</option>
                        </select>
                        <label>–Ø–∑—ã–∫:</label>
                        <select>
                            <option>–†—É—Å—Å–∫–∏–π</option>
                            <option>English</option>
                        </select>
                        <label>–¢–µ–º–∞:</label>
                        <select>
                            <option>–°–≤–µ—Ç–ª–∞—è</option>
                            <option>–¢–µ–º–Ω–∞—è</option>
                            <option>–ê–≤—Ç–æ</option>
                        </select>
                    </div>
                `);
            }

            showHistory() {
                this.showModal('–ò—Å—Ç–æ—Ä–∏—è', `
                    <div class="stats-container">
                        <div class="stat-item">
                            <h4>–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è</h4>
                            <p>–°–µ–≥–æ–¥–Ω—è, 15 –º–∏–Ω—É—Ç</p>
                        </div>
                        <div class="stat-item">
                            <h4>–ù–µ–¥–µ–ª—è</h4>
                            <p>5 —Å–µ—Å—Å–∏–π, 1.5 —á–∞—Å–∞</p>
                        </div>
                        <div class="stat-item">
                            <h4>–ú–µ—Å—è—Ü</h4>
                            <p>22 —Å–µ—Å—Å–∏–∏, 6.5 —á–∞—Å–æ–≤</p>
                        </div>
                    </div>
                `);
            }

            toggleSupport() {
                const section = document.getElementById('supportSection');
                section.style.display = section.style.display === 'none' ? 'block' : 'none';
            }

            sendMessage() {
                const input = document.getElementById('messageInput');
                const message = input.value.trim();
                
                if (message) {
                    this.addMessageToChat('user', message);
                    input.value = '';
                    
                    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
                    setTimeout(() => {
                        const responses = [
                            '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
                            '–ü–æ–Ω—è–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º...',
                            '–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —É–∂–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –≤–∞—à –≤–æ–ø—Ä–æ—Å.',
                            '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –°–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.'
                        ];
                        const randomResponse = responses[Math.floor(Math.random() * responses.length)];
                        this.addMessageToChat('support', randomResponse);
                    }, 1000);
                }
            }

            addMessageToChat(sender, text) {
                const chatContainer = document.getElementById('chatContainer');
                const messageDiv = document.createElement('div');
                messageDiv.className = `message ${sender}-message`;
                messageDiv.textContent = text;
                chatContainer.appendChild(messageDiv);
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }

            showModal(title, content) {
                const modal = document.getElementById('modal');
                const modalContent = document.getElementById('modalContent');
                
                modalContent.innerHTML = `
                    <h2>${title}</h2>
                    ${content}
                    <button class="close-modal" onclick="miniApp.closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
                `;
                
                modal.style.display = 'flex';
            }

            closeModal() {
                document.getElementById('modal').style.display = 'none';
            }

            loadUserData() {
                const userInfo = document.getElementById('userInfo');
                userInfo.innerHTML = 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
            }

            // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ç–∞–π–º–µ—Ä–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–∏
            startTimer() {
                alert('–¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
            }

            pauseTimer() {
                alert('–¢–∞–π–º–µ—Ä –Ω–∞ –ø–∞—É–∑–µ');
            }

            resetTimer() {
                alert('–¢–∞–π–º–µ—Ä —Å–±—Ä–æ—à–µ–Ω');
            }

            testVibration() {
                alert('–í–∏–±—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!');
            }
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        const miniApp = new MiniApp();
    </script>
</body>
</html>
